import { Schema, model } from 'mongoose';
import { IPlayerDocument } from '../interfaces/player.interface';

const PlayerSchema = new Schema({
    user: { type: Schema.Types.ObjectId, ref: 'User' },
    name: { type: String, required: true },
    level: { type: Number },
    experience: { type: Number },
    statPoints: { type: Number },
    primaryStats: {
        strength: { type: Number },
        constitution: { type: Number },
        dexterity: { type: Number },
        agility: { type: Number },
        intelligence: { type: Number },
        wisdom: { type: Number }
    },
    baseStats: {
        strength: { type: Number },
        constitution: { type: Number },
        dexterity: { type: Number },
        agility: { type: Number },
        intelligence: { type: Number },
        wisdom: { type: Number },
        attackDamage: { type: Number },
        attackSpeed: { type: Number },
        accuracy: { type: Number },
        criticalChance: { type: Number },
        range: { type: Number },
        fireDamage: { type: Number },
        poisonDamage: { type: Number },
        coldDamage: { type: Number },
        electricDamage: { type: Number },
        hpRegen: { type: Number },
        armor: { type: Number },
        dodge: { type: Number },
        block: { type: Number },
        fireResistance: { type: Number },
        poisonResistance: { type: Number },
        coldResistance: { type: Number },
        electricResistance: { type: Number},
        hp: { type: Number },
        mp: { type: Number }
    },
    currentHp: { type: Number },
    currentMp: { type: Number },
    equipment: {
        helmet: { type: Schema.Types.ObjectId, ref: 'Item' },
        chest: { type: Schema.Types.ObjectId, ref: 'Item' },
        legs: { type: Schema.Types.ObjectId, ref: 'Item' },
        gloves: { type: Schema.Types.ObjectId, ref: 'Item' },
        boots: { type: Schema.Types.ObjectId, ref: 'Item' },
        necklace: { type: Schema.Types.ObjectId, ref: 'Item' },
        ring1: { type: Schema.Types.ObjectId, ref: 'Item' },
        ring2: { type: Schema.Types.ObjectId, ref: 'Item' },
        mainHand: { type: Schema.Types.ObjectId, ref: 'Item' },
        offHand: { type: Schema.Types.ObjectId, ref: 'Item' }
    }
});

export const Player = model<IPlayerDocument>('Player', PlayerSchema);



/*{
  _id: ObjectId, // Automatically generated by MongoDB
  name: String,
  level: Number,
  experience: Number,
  baseStats: {
      strength: Number,
      constitution: Number,
      dexterity: Number,
      agility: Number,
      intelligence: Number,
      wisdom: Number
  },
  hp: {
      current: Number,
      max: Number
  },
  mp: {
      current: Number,
      max: Number
  },
  equipment: {
      helmet: { type: ObjectId, ref: 'Item' },
      chest: { type: ObjectId, ref: 'Item' },
      legs: { type: ObjectId, ref: 'Item' },
      gloves: { type: ObjectId, ref: 'Item' },
      boots: { type: ObjectId, ref: 'Item' },
      necklace: { type: ObjectId, ref: 'Item' },
      ring1: { type: ObjectId, ref: 'Item' },
      ring2: { type: ObjectId, ref: 'Item' },
      mainHand: { type: ObjectId, ref: 'Item' },
      offHand: { type: ObjectId, ref: 'Item' }
  },
  offensiveStats: {
      attackDamage: Number,
      accuracy: Number,
      criticalChance: Number,
      range: Number,
      elementalDamage: {
          fire: Number,
          poison: Number,
          cold: Number,
          electric: Number
      }
  },
  defensiveStats: {
      hpRegen: Number,
      defense: Number,
      dodge: Number,
      block: Number,
      elementalResistance: {
          fire: Number,
          poison: Number,
          cold: Number,
          electric: Number
      }
  }
}*/